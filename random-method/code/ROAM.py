import networkx as nx
import random
import xlwt
from collections import defaultdict

# 该函数为k-shell分解算法
def k_shell(graph_copy):
    graph = nx.Graph(graph_copy)  # 复制一个图
    importance_dict = defaultdict(list)
    k = 1  # 初始k值
    while len(graph.degree):  # 返回节点的个数
        while True:
            level_node_list = []
            for item in graph.degree:  # 列表元祖，元组前面是节点编号，后面是节点的度
                if item[1] <= k:
                    level_node_list.append(item[0])
            graph.remove_nodes_from(level_node_list)
            importance_dict[k].extend(level_node_list)
            if not len(graph.degree):
                return importance_dict
            if min(graph.degree, key=lambda x: x[1])[1] > k:
                break
        k = min(graph.degree, key=lambda x: x[1])[1]
    return importance_dict

def difference(S, R):
    DIF = nx.create_empty_copy(R)
    DIF.name ="Difference of (%s and %s)" % (S.name, R.name)
    if set(S) != set(R):
        raise nx.NetworkXError("Node sets of graphs is not equal")

    r_edges = set(R.edges())
    s_edges = set(S.edges())

    # I'm not sure what the goal is: the difference, or the edges that are in R but not in S
    # In case it is the difference:
    diff_edges = r_edges.symmetric_difference(s_edges)

    # In case its the edges that are in R but not in S:
    # diff_edges = r_edges - s_edges

    DIF.add_edges_from(diff_edges)

    return DIF



if __name__ == "__main__":
    li = [1, 0, 2, 0, 2, 1, 3, 0, 3, 1, 3, 2, 4, 0, 4, 1, 4, 2, 4, 3, 5, 0, 5, 1, 5, 2, 5, 3, 6, 2, 6, 3, 6, 4, 6, 5, 7, 0, 7, 2, 7, 3, 7, 6, 8, 3, 8, 4, 8, 6, 8, 7, 9, 0, 9, 1, 9, 7, 9, 8, 10, 3, 10, 6, 10, 8, 10, 9, 11, 0, 11, 2, 11, 3, 11, 6, 12, 1, 12, 3, 12, 4, 12, 5, 13, 1, 13, 5, 13, 6, 13, 7, 14, 1, 14, 3, 14, 5, 14, 9, 15, 0, 15, 3, 15, 10, 15, 14, 16, 2, 16, 5, 16, 7, 16, 13, 17, 1, 17, 5, 17, 7, 17, 10, 18, 2, 18, 7, 18, 12, 18, 14, 19, 0, 19, 6, 19, 12, 19, 15, 20, 4, 20, 6, 20, 13, 20, 17, 21, 3, 21, 5, 21, 6, 21, 16, 22, 0, 22, 4, 22, 11, 22, 16, 23, 2, 23, 3, 23, 6, 23, 19, 24, 3, 24, 9, 24, 10, 24, 22, 25, 1, 25, 3, 25, 17, 25, 21, 26, 0, 26, 2, 26, 7, 26, 12, 27, 0, 27, 4, 27, 5, 27, 13, 28, 1, 28, 12, 28, 17, 28, 24, 29, 0, 29, 5, 29, 8, 29, 21, 30, 1, 30, 10, 30, 21, 30, 29, 31, 3, 31, 13, 31, 15, 31, 30, 32, 0, 32, 4, 32, 11, 32, 28, 33, 0, 33, 3, 33, 29, 33, 30, 34, 8, 34, 12, 34, 19, 34, 24, 35, 12, 35, 14, 35, 15, 35, 20, 36, 4, 36, 15, 36, 18, 36, 33, 37, 0, 37, 7, 37, 12, 37, 19, 38, 20, 38, 22, 38, 23, 38, 35, 39, 6, 39, 12, 39, 28, 39, 32, 40, 12, 40, 17, 40, 21, 40, 39, 41, 0, 41, 9, 41, 12, 41, 30, 42, 0, 42, 6, 42, 8, 42, 28, 43, 12, 43, 28, 43, 34, 43, 42, 44, 3, 44, 8, 44, 9, 44, 21, 45, 1, 45, 2, 45, 21, 45, 31, 46, 2, 46, 18, 46, 19, 46, 24, 47, 2, 47, 3, 47, 14, 47, 40, 48, 1, 48, 9, 48, 13, 48, 26, 49, 0, 49, 1, 49, 11, 49, 31, 50, 7, 50, 9, 50, 13, 50, 48, 51, 3, 51, 4, 51, 27, 51, 28, 52, 14, 52, 16, 52, 31, 52, 32, 53, 5, 53, 12, 53, 14, 53, 20, 54, 7, 54, 35, 54, 38, 54, 49, 55, 5, 55, 8, 55, 12, 55, 39, 56, 2, 56, 5, 56, 33, 56, 39, 57, 5, 57, 28, 57, 30, 57, 35, 58, 3, 58, 4, 58, 24, 58, 55, 59, 4, 59, 20, 59, 27, 59, 33, 60, 4, 60, 13, 60, 27, 60, 52, 61, 7, 61, 19, 61, 27, 61, 53, 62, 10, 62, 13, 62, 16, 62, 32, 63, 0, 63, 2, 63, 35, 63, 61, 64, 8, 64, 16, 64, 21, 64, 60, 65, 0, 65, 30, 65, 36, 65, 52, 66, 6, 66, 9, 66, 29, 66, 45, 67, 0, 67, 28, 67, 38, 67, 61, 68, 1, 68, 9, 68, 19, 68, 59, 69, 13, 69, 25, 69, 43, 69, 59, 70, 5, 70, 12, 70, 18, 70, 47, 71, 6, 71, 12, 71, 14, 71, 15, 72, 21, 72, 30, 72, 39, 72, 67, 73, 2, 73, 7, 73, 19, 73, 64, 74, 1, 74, 12, 74, 24, 74, 41, 75, 1, 75, 3, 75, 31, 75, 69, 76, 5, 76, 28, 76, 38, 76, 55, 77, 4, 77, 11, 77, 34, 77, 53, 78, 5, 78, 6, 78, 8, 78, 36, 79, 2, 79, 6, 79, 28, 79, 63, 80, 6, 80, 12, 80, 26, 80, 44, 81, 6, 81, 8, 81, 34, 81, 59, 82, 3, 82, 6, 82, 15, 82, 24, 83, 9, 83, 20, 83, 41, 83, 46, 84, 0, 84, 33, 84, 35, 84, 52, 85, 2, 85, 11, 85, 28, 85, 29, 86, 1, 86, 16, 86, 48, 86, 82, 87, 8, 87, 28, 87, 52, 87, 86, 88, 2, 88, 10, 88, 12, 88, 21, 89, 1, 89, 60, 89, 81, 89, 82, 90, 5, 90, 7, 90, 26, 90, 83, 91, 9, 91, 29, 91, 60, 91, 61, 92, 6, 92, 12, 92, 18, 92, 29, 93, 30, 93, 66, 93, 73, 93, 77, 94, 1, 94, 16, 94, 21, 94, 32, 95, 3, 95, 15, 95, 21, 95, 50, 96, 27, 96, 29, 96, 38, 96, 49, 97, 1, 97, 8, 97, 46, 97, 56, 98, 10, 98, 21, 98, 30, 98, 58, 99, 6, 99, 10, 99, 20, 99, 32, 100, 8, 100, 13, 100, 51, 100, 83, 101, 2, 101, 16, 101, 30, 101, 47, 102, 13, 102, 21, 102, 46, 102, 91, 103, 17, 103, 50, 103, 57, 103, 98, 104, 0, 104, 3, 104, 84, 104, 100, 105, 15, 105, 31, 105, 40, 105, 46, 106, 8, 106, 14, 106, 45, 106, 52, 107, 3, 107, 5, 107, 29, 107, 47, 108, 0, 108, 35, 108, 85, 108, 93, 109, 0, 109, 10, 109, 21, 109, 29, 110, 52, 110, 72, 110, 82, 110, 100, 111, 12, 111, 39, 111, 80, 111, 109, 112, 4, 112, 15, 112, 30, 112, 81, 113, 8, 113, 18, 113, 84, 113, 96, 114, 0, 114, 15, 114, 38, 114, 40, 115, 12, 115, 31, 115, 101, 115, 102, 116, 15, 116, 52, 116, 75, 116, 82, 117, 0, 117, 20, 117, 59, 117, 73, 118, 6, 118, 9, 118, 70, 118, 72, 119, 0, 119, 11, 119, 36, 119, 83, 120, 0, 120, 6, 120, 47, 120, 53, 121, 30, 121, 66, 121, 85, 121, 89, 122, 6, 122, 30, 122, 72, 122, 85, 123, 17, 123, 26, 123, 28, 123, 89, 124, 18, 124, 35, 124, 48, 124, 79, 125, 9, 125, 10, 125, 18, 125, 50, 126, 20, 126, 24, 126, 61, 126, 86, 127, 8, 127, 52, 127, 61, 127, 120, 128, 6, 128, 20, 128, 24, 128, 82, 129, 0, 129, 89, 129, 92, 129, 98, 130, 2, 130, 7, 130, 18, 130, 28, 131, 8, 131, 19, 131, 28, 131, 128, 132, 6, 132, 55, 132, 69, 132, 112, 133, 22, 133, 29, 133, 38, 133, 89, 134, 12, 134, 50, 134, 74, 134, 105, 135, 21, 135, 73, 135, 100, 135, 114, 136, 6, 136, 20, 136, 31, 136, 39, 137, 14, 137, 20, 137, 108, 137, 115, 138, 10, 138, 60, 138, 63, 138, 82, 139, 3, 139, 7, 139, 58, 139, 86, 140, 6, 140, 15, 140, 64, 140, 101, 141, 3, 141, 20, 141, 30, 141, 110, 142, 12, 142, 22, 142, 78, 142, 123, 143, 12, 143, 38, 143, 82, 143, 104, 144, 9, 144, 47, 144, 83, 144, 132, 145, 1, 145, 6, 145, 15, 145, 43, 146, 0, 146, 73, 146, 84, 146, 113, 147, 10, 147, 43, 147, 93, 147, 128, 148, 2, 148, 8, 148, 19, 148, 75, 149, 5, 149, 48, 149, 128, 149, 146, 150, 7, 150, 15, 150, 30, 150, 57, 151, 15, 151, 91, 151, 100, 151, 112, 152, 5, 152, 12, 152, 43, 152, 80, 153, 3, 153, 34, 153, 128, 153, 134, 154, 4, 154, 9, 154, 20, 154, 30, 155, 12, 155, 13, 155, 53, 155, 80, 156, 29, 156, 104, 156, 110, 156, 119, 157, 22, 157, 72, 157, 131, 157, 154, 158, 46, 158, 49, 158, 97, 158, 111, 159, 1, 159, 20, 159, 56, 159, 111, 160, 39, 160, 81, 160, 135, 160, 141, 161, 1, 161, 8, 161, 106, 161, 118, 162, 12, 162, 51, 162, 57, 162, 155, 163, 15, 163, 49, 163, 77, 163, 90, 164, 13, 164, 14, 164, 33, 164, 36, 165, 5, 165, 16, 165, 67, 165, 136, 166, 11, 166, 30, 166, 122, 166, 125, 167, 3, 167, 12, 167, 30, 167, 74, 168, 30, 168, 82, 168, 84, 168, 159, 169, 3, 169, 12, 169, 13, 169, 21, 170, 18, 170, 23, 170, 72, 170, 168, 171, 3, 171, 80, 171, 115, 171, 123, 172, 2, 172, 6, 172, 12, 172, 39, 173, 3, 173, 6, 173, 86, 173, 98, 174, 32, 174, 38, 174, 48, 174, 121, 175, 45, 175, 139, 175, 172, 175, 174, 176, 6, 176, 13, 176, 20, 176, 89, 177, 3, 177, 14, 177, 40, 177, 54, 178, 2, 178, 39, 178, 53, 178, 130, 179, 80, 179, 124, 179, 139, 179, 144, 180, 18, 180, 27, 180, 59, 180, 111, 181, 3, 181, 12, 181, 98, 181, 119, 182, 9, 182, 16, 182, 25, 182, 39, 183, 12, 183, 18, 183, 21, 183, 93, 184, 35, 184, 46, 184, 66, 184, 93, 185, 39, 185, 75, 185, 114, 185, 146, 186, 30, 186, 127, 186, 133, 186, 145, 187, 6, 187, 15, 187, 92, 187, 102, 188, 3, 188, 18, 188, 115, 188, 134, 189, 3, 189, 33, 189, 40, 189, 94, 190, 10, 190, 20, 190, 39, 190, 52, 191, 5, 191, 93, 191, 127, 191, 162, 192, 16, 192, 34, 192, 116, 192, 180, 193, 3, 193, 34, 193, 65, 193, 82, 194, 5, 194, 9, 194, 33, 194, 113, 195, 3, 195, 6, 195, 69, 195, 94, 196, 8, 196, 21, 196, 49, 196, 83, 197, 23, 197, 35, 197, 69, 197, 135, 198, 3, 198, 36, 198, 51, 198, 52, 199, 4, 199, 15, 199, 87, 199, 111, 200, 2, 200, 3, 200, 41, 200, 84, 201, 8, 201, 65, 201, 122, 201, 124, 202, 20, 202, 27, 202, 180, 202, 184, 203, 15, 203, 32, 203, 145, 203, 181, 204, 16, 204, 48, 204, 60, 204, 73, 205, 12, 205, 13, 205, 21, 205, 87, 206, 2, 206, 3, 206, 14, 206, 96, 207, 22, 207, 84, 207, 87, 207, 201, 208, 16, 208, 21, 208, 35, 208, 117, 209, 1, 209, 2, 209, 85, 209, 172, 210, 63, 210, 67, 210, 93, 210, 184, 211, 51, 211, 135, 211, 164, 211, 171, 212, 30, 212, 35, 212, 43, 212, 87, 213, 27, 213, 92, 213, 163, 213, 188, 214, 3, 214, 30, 214, 32, 214, 181, 215, 5, 215, 23, 215, 117, 215, 162, 216, 46, 216, 51, 216, 66, 216, 68, 217, 0, 217, 7, 217, 151, 217, 201, 218, 9, 218, 115, 218, 159, 218, 176, 219, 28, 219, 163, 219, 205, 219, 208, 220, 3, 220, 136, 220, 146, 220, 195, 221, 27, 221, 39, 221, 180, 221, 189, 222, 2, 222, 7, 222, 57, 222, 166, 223, 20, 223, 61, 223, 128, 223, 141, 224, 21, 224, 53, 224, 132, 224, 173, 225, 35, 225, 115, 225, 195, 225, 222, 226, 65, 226, 75, 226, 123, 226, 128, 227, 4, 227, 9, 227, 43, 227, 124, 228, 39, 228, 82, 228, 100, 228, 107, 229, 12, 229, 75, 229, 146, 229, 184, 230, 11, 230, 30, 230, 92, 230, 180, 231, 31, 231, 111, 231, 192, 231, 210, 232, 7, 232, 24, 232, 66, 232, 209, 233, 20, 233, 48, 233, 52, 233, 57, 234, 13, 234, 55, 234, 120, 234, 164, 235, 3, 235, 5, 235, 57, 235, 101, 236, 2, 236, 22, 236, 194, 236, 198, 237, 52, 237, 89, 237, 179, 237, 184, 238, 11, 238, 30, 238, 52, 238, 55, 239, 3, 239, 17, 239, 18, 239, 87, 240, 39, 240, 167, 240, 175, 240, 210, 241, 36, 241, 87, 241, 110, 241, 173, 242, 3, 242, 6, 242, 28, 242, 195, 243, 14, 243, 35, 243, 39, 243, 129, 244, 32, 244, 56, 244, 131, 244, 219, 245, 15, 245, 100, 245, 143, 245, 148, 246, 1, 246, 12, 246, 82, 246, 91, 247, 13, 247, 38, 247, 170, 247, 222, 248, 51, 248, 110, 248, 124, 248, 212, 249, 4, 249, 22, 249, 40, 249, 64, 250, 1, 250, 28, 250, 102, 250, 155, 251, 20, 251, 38, 251, 41, 251, 125, 252, 3, 252, 12, 252, 13, 252, 47, 253, 3, 253, 20, 253, 106, 253, 131, 254, 6, 254, 66, 254, 90, 254, 204, 255, 45, 255, 130, 255, 204, 255, 228, 256, 41, 256, 46, 256, 57, 256, 79, 257, 29, 257, 108, 257, 159, 257, 195, 258, 8, 258, 22, 258, 37, 258, 39, 259, 0, 259, 1, 259, 6, 259, 46, 260, 0, 260, 1, 260, 133, 260, 221, 261, 3, 261, 27, 261, 32, 261, 91, 262, 12, 262, 30, 262, 52, 262, 160, 263, 2, 263, 3, 263, 8, 263, 39, 264, 2, 264, 3, 264, 73, 264, 245, 265, 10, 265, 13, 265, 94, 265, 176, 266, 21, 266, 128, 266, 173, 266, 199, 267, 16, 267, 55, 267, 125, 267, 218, 268, 9, 268, 107, 268, 119, 268, 190, 269, 1, 269, 19, 269, 52, 269, 218, 270, 16, 270, 31, 270, 195, 270, 218, 271, 11, 271, 14, 271, 61, 271, 161, 272, 13, 272, 15, 272, 79, 272, 227, 273, 9, 273, 56, 273, 145, 273, 247, 274, 9, 274, 29, 274, 116, 274, 257, 275, 3, 275, 41, 275, 52, 275, 106, 276, 1, 276, 44, 276, 97, 276, 114, 277, 2, 277, 102, 277, 164, 277, 251, 278, 3, 278, 133, 278, 192, 278, 210, 279, 4, 279, 42, 279, 48, 279, 195, 280, 3, 280, 17, 280, 38, 280, 59, 281, 0, 281, 47, 281, 171, 281, 279, 282, 0, 282, 128, 282, 215, 282, 265, 283, 40, 283, 67, 283, 195, 283, 204, 284, 18, 284, 32, 284, 172, 284, 277, 285, 52, 285, 54, 285, 203, 285, 276, 286, 16, 286, 101, 286, 108, 286, 170, 287, 8, 287, 12, 287, 91, 287, 183, 288, 20, 288, 122, 288, 235, 288, 270, 289, 13, 289, 48, 289, 121, 289, 288, 290, 2, 290, 52, 290, 100, 290, 153, 291, 39, 291, 56, 291, 83, 291, 87, 292, 35, 292, 75, 292, 105, 292, 146, 293, 8, 293, 28, 293, 147, 293, 173, 294, 12, 294, 87, 294, 89, 294, 224, 295, 4, 295, 39, 295, 87, 295, 127, 296, 2, 296, 9, 296, 24, 296, 222, 297, 6, 297, 21, 297, 46, 297, 101, 298, 66, 298, 87, 298, 185, 298, 196, 299, 6, 299, 29, 299, 108, 299, 118]
    print(len(li))

    G = nx.Graph()

    for i in range(0, len(li), 2):
        # print(li[i], li[i+1])
        G.add_edge(li[i], li[i+1])
    print(G)

    # 计算K-shell
    print("k-shell")
    k = k_shell(G)
    print(dict(k))
    k = {value: key for key, values in dict(k).items() for value in values}
    print(k)
    for v in G.nodes():
        print(v, k[v])

    # 计算PageRank
    print("PageRank")
    pr = nx.pagerank(G, alpha=0.85)
    # pr = sorted(pr.items(), key=lambda x: x[1], reverse=True)
    # print(pr)
    for v in G.nodes():
        print(v, pr[v])

    # 计算中介中心度
    print("Betweenness centrality")
    b = nx.betweenness_centrality(G)
    for v in G.nodes():
        # print("%s %0.6r" % (v, b[v]))
        # %s字符串，%0.6r浮点数子6位
        print(v, b[v])
    # 计算度中心度
    print("Degree centrality")
    d = nx.degree_centrality(G)
    for v in G.nodes():
        print(v, d[v])
    # 计算紧密中心度
    print("Closeness centrality")
    c = nx.closeness_centrality(G)
    for v in G.nodes():
        print(v, c[v])

    li_ = [1, 0, 2, 0, 2, 1, 4, 0, 4, 1, 4, 2, 5, 0, 5, 1, 5, 2, 6, 2, 6, 4, 6, 5, 7, 0, 7, 2, 7, 6, 8, 4, 8, 6, 8, 7, 9, 0, 9, 1, 9, 7, 9, 8, 10, 6, 10, 8, 10, 9, 11, 0, 11, 2, 11, 6, 12, 1, 12, 4, 12, 5, 13, 1, 13, 5, 13, 6, 13, 7, 14, 1, 14, 5, 14, 9, 15, 0, 15, 10, 15, 14, 16, 2, 16, 5, 16, 7, 16, 13, 17, 1, 17, 5, 17, 7, 17, 10, 18, 2, 18, 7, 18, 12, 18, 14, 19, 0, 19, 6, 19, 12, 19, 15, 20, 4, 20, 6, 20, 13, 20, 17, 21, 5, 21, 6, 21, 16, 22, 0, 22, 4, 22, 11, 22, 16, 23, 2, 23, 6, 23, 19, 24, 9, 24, 10, 24, 22, 25, 1, 25, 17, 25, 21, 26, 0, 26, 2, 26, 7, 26, 12, 27, 0, 27, 4, 27, 5, 27, 13, 28, 1, 28, 12, 28, 17, 28, 24, 29, 0, 29, 5, 29, 8, 29, 21, 30, 1, 30, 10, 30, 21, 30, 29, 31, 13, 31, 15, 31, 30, 32, 0, 32, 4, 32, 11, 32, 28, 33, 0, 33, 29, 33, 30, 34, 8, 34, 12, 34, 19, 34, 24, 35, 12, 35, 14, 35, 15, 35, 20, 36, 4, 36, 15, 36, 18, 36, 33, 37, 0, 37, 7, 37, 12, 37, 19, 38, 20, 38, 22, 38, 23, 38, 35, 39, 6, 39, 12, 39, 28, 39, 32, 40, 12, 40, 17, 40, 21, 40, 39, 41, 0, 41, 9, 41, 12, 41, 30, 42, 0, 42, 6, 42, 8, 42, 28, 43, 12, 43, 28, 43, 34, 43, 42, 44, 8, 44, 9, 44, 21, 45, 1, 45, 2, 45, 21, 45, 31, 46, 2, 46, 18, 46, 19, 46, 24, 47, 2, 47, 14, 47, 40, 48, 1, 48, 9, 48, 13, 48, 26, 49, 0, 49, 1, 49, 11, 49, 31, 50, 7, 50, 9, 50, 13, 50, 48, 51, 4, 51, 27, 51, 28, 52, 14, 52, 16, 52, 31, 52, 32, 53, 5, 53, 12, 53, 14, 53, 20, 54, 7, 54, 35, 54, 38, 54, 49, 55, 5, 55, 8, 55, 12, 55, 39, 56, 2, 56, 5, 56, 33, 56, 39, 57, 5, 57, 28, 57, 30, 57, 35, 58, 4, 58, 24, 58, 55, 59, 4, 59, 20, 59, 27, 59, 33, 60, 4, 60, 13, 60, 27, 60, 52, 61, 7, 61, 19, 61, 27, 61, 53, 62, 10, 62, 13, 62, 16, 62, 32, 63, 0, 63, 2, 63, 35, 63, 61, 64, 8, 64, 16, 64, 21, 64, 60, 65, 0, 65, 30, 65, 36, 65, 52, 66, 6, 66, 9, 66, 29, 66, 45, 67, 0, 67, 28, 67, 38, 67, 61, 68, 1, 68, 9, 68, 19, 68, 59, 69, 13, 69, 25, 69, 43, 69, 59, 70, 5, 70, 12, 70, 18, 70, 47, 71, 6, 71, 12, 71, 14, 71, 15, 72, 21, 72, 30, 72, 39, 72, 67, 73, 2, 73, 7, 73, 19, 73, 64, 74, 1, 74, 12, 74, 24, 74, 41, 75, 1, 75, 31, 75, 69, 76, 5, 76, 28, 76, 38, 76, 55, 77, 4, 77, 11, 77, 34, 77, 53, 78, 5, 78, 6, 78, 8, 78, 36, 79, 2, 79, 6, 79, 28, 79, 63, 80, 6, 80, 12, 80, 26, 80, 44, 81, 6, 81, 8, 81, 34, 81, 59, 82, 6, 82, 15, 82, 24, 83, 9, 83, 20, 83, 41, 83, 46, 84, 0, 84, 33, 84, 35, 84, 52, 85, 2, 85, 11, 85, 28, 85, 29, 86, 1, 86, 16, 86, 48, 86, 82, 87, 8, 87, 28, 87, 52, 87, 86, 88, 2, 88, 10, 88, 12, 88, 21, 89, 1, 89, 60, 89, 81, 89, 82, 90, 5, 90, 7, 90, 26, 90, 83, 91, 9, 91, 29, 91, 60, 91, 61, 92, 6, 92, 12, 92, 18, 92, 29, 93, 30, 93, 66, 93, 73, 93, 77, 94, 1, 94, 16, 94, 21, 94, 32, 95, 15, 95, 21, 95, 50, 96, 27, 96, 29, 96, 38, 96, 49, 97, 1, 97, 8, 97, 46, 97, 56, 98, 10, 98, 21, 98, 30, 98, 58, 99, 6, 99, 10, 99, 20, 99, 32, 100, 8, 100, 13, 100, 51, 100, 83, 101, 2, 101, 16, 101, 30, 101, 47, 102, 13, 102, 21, 102, 46, 102, 91, 103, 17, 103, 50, 103, 57, 103, 98, 104, 0, 104, 84, 104, 100, 105, 15, 105, 31, 105, 40, 105, 46, 106, 8, 106, 14, 106, 45, 106, 52, 107, 5, 107, 29, 107, 47, 108, 0, 108, 35, 108, 85, 108, 93, 109, 0, 109, 10, 109, 21, 109, 29, 110, 52, 110, 72, 110, 82, 110, 100, 111, 12, 111, 39, 111, 80, 111, 109, 112, 4, 112, 15, 112, 30, 112, 81, 113, 8, 113, 18, 113, 84, 113, 96, 114, 0, 114, 15, 114, 38, 114, 40, 115, 12, 115, 31, 115, 101, 115, 102, 116, 15, 116, 52, 116, 75, 116, 82, 117, 0, 117, 20, 117, 59, 117, 73, 118, 6, 118, 9, 118, 70, 118, 72, 119, 0, 119, 11, 119, 36, 119, 83, 120, 0, 120, 6, 120, 47, 120, 53, 121, 30, 121, 66, 121, 85, 121, 89, 122, 6, 122, 30, 122, 72, 122, 85, 123, 17, 123, 26, 123, 28, 123, 89, 124, 18, 124, 35, 124, 48, 124, 79, 125, 9, 125, 10, 125, 18, 125, 50, 126, 20, 126, 24, 126, 61, 126, 86, 127, 8, 127, 52, 127, 61, 127, 120, 128, 6, 128, 20, 128, 24, 128, 82, 129, 0, 129, 89, 129, 92, 129, 98, 130, 2, 130, 7, 130, 18, 130, 28, 131, 8, 131, 19, 131, 28, 131, 128, 132, 6, 132, 55, 132, 69, 132, 112, 133, 22, 133, 29, 133, 38, 133, 89, 134, 12, 134, 50, 134, 74, 134, 105, 135, 21, 135, 73, 135, 100, 135, 114, 136, 6, 136, 20, 136, 31, 136, 39, 137, 14, 137, 20, 137, 108, 137, 115, 138, 10, 138, 60, 138, 63, 138, 82, 139, 7, 139, 58, 139, 86, 140, 6, 140, 15, 140, 64, 140, 101, 141, 20, 141, 30, 141, 110, 142, 12, 142, 22, 142, 78, 142, 123, 143, 12, 143, 38, 143, 82, 143, 104, 144, 9, 144, 47, 144, 83, 144, 132, 145, 1, 145, 6, 145, 15, 145, 43, 146, 0, 146, 73, 146, 84, 146, 113, 147, 10, 147, 43, 147, 93, 147, 128, 148, 2, 148, 8, 148, 19, 148, 75, 149, 5, 149, 48, 149, 128, 149, 146, 150, 7, 150, 15, 150, 30, 150, 57, 151, 15, 151, 91, 151, 100, 151, 112, 152, 5, 152, 12, 152, 43, 152, 80, 153, 34, 153, 128, 153, 134, 154, 4, 154, 9, 154, 20, 154, 30, 155, 12, 155, 13, 155, 53, 155, 80, 156, 29, 156, 104, 156, 110, 156, 119, 157, 22, 157, 72, 157, 131, 157, 154, 158, 46, 158, 49, 158, 97, 158, 111, 159, 1, 159, 20, 159, 56, 159, 111, 160, 39, 160, 81, 160, 135, 160, 141, 161, 1, 161, 8, 161, 106, 161, 118, 162, 12, 162, 51, 162, 57, 162, 155, 163, 15, 163, 49, 163, 77, 163, 90, 164, 13, 164, 14, 164, 33, 164, 36, 165, 5, 165, 16, 165, 67, 165, 136, 166, 11, 166, 30, 166, 122, 166, 125, 167, 12, 167, 30, 167, 74, 168, 30, 168, 82, 168, 84, 168, 159, 169, 12, 169, 13, 169, 21, 170, 18, 170, 23, 170, 72, 170, 168, 171, 80, 171, 115, 171, 123, 172, 2, 172, 6, 172, 12, 172, 39, 173, 6, 173, 86, 173, 98, 174, 32, 174, 38, 174, 48, 174, 121, 175, 45, 175, 139, 175, 172, 175, 174, 176, 6, 176, 13, 176, 20, 176, 89, 177, 14, 177, 40, 177, 54, 178, 2, 178, 39, 178, 53, 178, 130, 179, 80, 179, 124, 179, 139, 179, 144, 180, 18, 180, 27, 180, 59, 180, 111, 181, 12, 181, 98, 181, 119, 182, 9, 182, 16, 182, 25, 182, 39, 183, 12, 183, 18, 183, 21, 183, 93, 184, 35, 184, 46, 184, 66, 184, 93, 185, 39, 185, 75, 185, 114, 185, 146, 186, 30, 186, 127, 186, 133, 186, 145, 187, 6, 187, 15, 187, 92, 187, 102, 188, 18, 188, 115, 188, 134, 189, 33, 189, 40, 189, 94, 190, 10, 190, 20, 190, 39, 190, 52, 191, 5, 191, 93, 191, 127, 191, 162, 192, 16, 192, 34, 192, 116, 192, 180, 193, 34, 193, 65, 193, 82, 194, 5, 194, 9, 194, 33, 194, 113, 195, 6, 195, 69, 195, 94, 196, 8, 196, 21, 196, 49, 196, 83, 197, 23, 197, 35, 197, 69, 197, 135, 198, 36, 198, 51, 198, 52, 199, 4, 199, 15, 199, 87, 199, 111, 200, 2, 200, 41, 200, 84, 201, 8, 201, 65, 201, 122, 201, 124, 202, 20, 202, 27, 202, 180, 202, 184, 203, 15, 203, 32, 203, 145, 203, 181, 204, 16, 204, 48, 204, 60, 204, 73, 205, 12, 205, 13, 205, 21, 205, 87, 206, 2, 206, 14, 206, 96, 207, 22, 207, 84, 207, 87, 207, 201, 208, 16, 208, 21, 208, 35, 208, 117, 209, 1, 209, 2, 209, 85, 209, 172, 210, 63, 210, 67, 210, 93, 210, 184, 211, 51, 211, 135, 211, 164, 211, 171, 212, 30, 212, 35, 212, 43, 212, 87, 213, 27, 213, 92, 213, 163, 213, 188, 214, 30, 214, 32, 214, 181, 215, 5, 215, 23, 215, 117, 215, 162, 216, 46, 216, 51, 216, 66, 216, 68, 217, 0, 217, 7, 217, 151, 217, 201, 218, 9, 218, 115, 218, 159, 218, 176, 219, 28, 219, 163, 219, 205, 219, 208, 220, 136, 220, 146, 220, 195, 221, 27, 221, 39, 221, 180, 221, 189, 222, 2, 222, 7, 222, 57, 222, 166, 223, 20, 223, 61, 223, 128, 223, 141, 224, 21, 224, 53, 224, 132, 224, 173, 225, 35, 225, 115, 225, 195, 225, 222, 226, 65, 226, 75, 226, 123, 226, 128, 227, 4, 227, 9, 227, 43, 227, 124, 228, 39, 228, 82, 228, 100, 228, 107, 229, 12, 229, 75, 229, 146, 229, 184, 230, 11, 230, 30, 230, 92, 230, 180, 231, 31, 231, 111, 231, 192, 231, 210, 232, 7, 232, 24, 232, 66, 232, 209, 233, 20, 233, 48, 233, 52, 233, 57, 234, 13, 234, 55, 234, 120, 234, 164, 235, 5, 235, 57, 235, 101, 236, 2, 236, 22, 236, 194, 236, 198, 237, 52, 237, 89, 237, 179, 237, 184, 238, 11, 238, 30, 238, 52, 238, 55, 239, 3, 239, 17, 239, 18, 239, 87, 240, 39, 240, 167, 240, 175, 240, 210, 241, 36, 241, 87, 241, 110, 241, 173, 242, 6, 242, 28, 242, 195, 243, 14, 243, 35, 243, 39, 243, 129, 244, 32, 244, 56, 244, 131, 244, 219, 245, 15, 245, 100, 245, 143, 245, 148, 246, 1, 246, 12, 246, 82, 246, 91, 247, 13, 247, 38, 247, 170, 247, 222, 248, 51, 248, 110, 248, 124, 248, 212, 249, 4, 249, 22, 249, 40, 249, 64, 250, 1, 250, 28, 250, 102, 250, 155, 251, 20, 251, 38, 251, 41, 251, 125, 252, 12, 252, 13, 252, 47, 253, 20, 253, 106, 253, 131, 254, 6, 254, 66, 254, 90, 254, 204, 255, 45, 255, 130, 255, 204, 255, 228, 256, 41, 256, 46, 256, 57, 256, 79, 257, 29, 257, 108, 257, 159, 257, 195, 258, 8, 258, 22, 258, 37, 258, 39, 259, 0, 259, 1, 259, 6, 259, 46, 260, 0, 260, 1, 260, 133, 260, 221, 261, 27, 261, 32, 261, 91, 262, 12, 262, 30, 262, 52, 262, 160, 263, 2, 263, 8, 263, 39, 264, 2, 264, 73, 264, 245, 265, 10, 265, 13, 265, 94, 265, 176, 266, 21, 266, 128, 266, 173, 266, 199, 267, 16, 267, 55, 267, 125, 267, 218, 268, 9, 268, 107, 268, 119, 268, 190, 269, 1, 269, 19, 269, 52, 269, 218, 270, 16, 270, 31, 270, 195, 270, 218, 271, 11, 271, 14, 271, 61, 271, 161, 272, 13, 272, 15, 272, 79, 272, 227, 273, 9, 273, 56, 273, 145, 273, 247, 274, 9, 274, 29, 274, 116, 274, 257, 275, 41, 275, 52, 275, 106, 276, 1, 276, 44, 276, 97, 276, 114, 277, 2, 277, 102, 277, 164, 277, 251, 278, 133, 278, 192, 278, 210, 279, 4, 279, 42, 279, 48, 279, 195, 280, 17, 280, 38, 280, 59, 281, 0, 281, 47, 281, 171, 281, 279, 282, 0, 282, 128, 282, 215, 282, 265, 283, 40, 283, 67, 283, 195, 283, 204, 284, 18, 284, 32, 284, 172, 284, 277, 285, 52, 285, 54, 285, 203, 285, 276, 286, 16, 286, 101, 286, 108, 286, 170, 287, 8, 287, 12, 287, 91, 287, 183, 288, 20, 288, 122, 288, 235, 288, 270, 289, 13, 289, 48, 289, 121, 289, 288, 290, 2, 290, 52, 290, 100, 290, 153, 291, 39, 291, 56, 291, 83, 291, 87, 292, 35, 292, 75, 292, 105, 292, 146, 293, 8, 293, 28, 293, 147, 293, 173, 294, 12, 294, 87, 294, 89, 294, 224, 295, 4, 295, 39, 295, 87, 295, 127, 296, 2, 296, 9, 296, 24, 296, 222, 297, 6, 297, 21, 297, 46, 297, 101, 298, 66, 298, 87, 298, 185, 298, 196, 299, 6, 299, 29, 299, 108, 299, 118]
    G_ = nx.Graph()

    for i in range(0, len(li_), 2):
        # print(li_[i], li_[i + 1])
        G_.add_edge(li_[i], li_[i + 1])
    print(G_)

    print(difference(G, G_).edges())
    print("differ edge:", len(difference(G, G_).edges()))

    # 计算K-shell
    print("k-shell")
    k_ = k_shell(G_)
    print(dict(k_))
    k_ = {value: key for key, values in dict(k_).items() for value in values}
    print(k_)
    for v in G_.nodes():
        print(v, k_[v])

    # 计算PageRank
    print("PageRank")
    pr_ = nx.pagerank(G_, alpha=0.85)
    # pr = sorted(pr.items(), key=lambda x: x[1], reverse=True)
    # print(pr)
    for v in G_.nodes():
        print(v, pr_[v])

    # 计算中介中心度
    print("Betweenness centrality")
    b_ = nx.betweenness_centrality(G_)
    for v in G_.nodes():
        # print("%s %0.6r" % (v, b[v]))
        # %s字符串，%0.6r浮点数子6位
        print(v, b_[v])
    # 计算度中心度
    print("Degree centrality")
    d_ = nx.degree_centrality(G_)
    for v in G_.nodes():
        print(v, d_[v])
    # 计算紧密中心度
    print("Closeness centrality")
    c_ = nx.closeness_centrality(G_)
    for v in G_.nodes():
        print(v, c_[v])

    # 创建Workbook,相当于创建Excel
    xls = xlwt.Workbook(encoding='utf-8')
    # 创建sheet，Sheet1为表的名字，cell_overwrite_ok为是否覆盖单元格
    sheet = xls.add_sheet('sheet1', cell_overwrite_ok=True)
    # 创建的文件夹，用来写入处理后的数据

    file = r"C:\Users\hello\Desktop\数据\ba300_roam_1_.xls"
    # 向表中添加数据
    sheet.write(0, 0, 'id')
    sheet.write(0, 1, "Betweenness centrality")
    sheet.write(0, 2, "Degree centrality")
    sheet.write(0, 3, "Closeness centrality")
    sheet.write(0, 4, "PageRank")
    sheet.write(0, 5, "K-shell")
    sheet.write(0, 6, "Betweenness centrality")
    sheet.write(0, 7, "Degree centrality")
    sheet.write(0, 8, "Closeness centrality")
    sheet.write(0, 9, "PageRank")
    sheet.write(0, 10, "K-shell")
    m = 1
    for v in G.nodes():
        sheet.write(m, 0, v)
        sheet.write(m, 1, b[v])
        sheet.write(m, 2, d[v])
        sheet.write(m, 3, c[v])
        sheet.write(m, 4, pr[v])
        sheet.write(m, 5, k[v])
        sheet.write(m, 6, b_[v])
        sheet.write(m, 7, d_[v])
        sheet.write(m, 8, c_[v])
        sheet.write(m, 9, pr_[v])
        sheet.write(m, 10, k_[v])
        m = m + 1
    # 保存到excel中
    xls.save(file)
